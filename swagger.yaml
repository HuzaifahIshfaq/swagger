swagger: "2.0"
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
host: api.example.com
basePath: /v2
schemes:
  - https
consumes: 
  - application/json
produces: 
  - application/json
paths:
  /users:
    get:
      description: Returns all users
      operationId: findUsers
      produces: 
        - application/json
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: a list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      description: "Create a new user"
      operationId: addUser
      produces: 
        - application/json
      parameters:
        - name: user
          in: body
          description: Add a new user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  
  /users/{id}:
    delete:
      description: Deletes a user by ID
      operationId: deleteUser
      produces: 
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the user to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: User deleted successfully
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      description: update a user by ID
      operationId: updateUser
      produces: 
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the user to update
          required: true
          type: integer
          format: int64
        - name: user
          in: body
          description: User object to update
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  User:
    type: object
    required: 
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      place:
        type: string
  ErrorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
