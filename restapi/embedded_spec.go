// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "Sample API",
    "version": "1.0.0"
  },
  "host": "api.example.com",
  "basePath": "/v2",
  "paths": {
    "/users": {
      "get": {
        "description": "Returns all users",
        "produces": [
          "application/json"
        ],
        "operationId": "findUsers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum number of results to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "a list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "description": "Create a new user",
        "produces": [
          "application/json"
        ],
        "operationId": "addUser",
        "parameters": [
          {
            "description": "Add a new user",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "description": "update a user by ID",
        "produces": [
          "application/json"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the user to update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "User object to update",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a user by ID",
        "produces": [
          "application/json"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the user to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "place": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "Sample API",
    "version": "1.0.0"
  },
  "host": "api.example.com",
  "basePath": "/v2",
  "paths": {
    "/users": {
      "get": {
        "description": "Returns all users",
        "produces": [
          "application/json"
        ],
        "operationId": "findUsers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum number of results to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "a list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post": {
        "description": "Create a new user",
        "produces": [
          "application/json"
        ],
        "operationId": "addUser",
        "parameters": [
          {
            "description": "Add a new user",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "description": "update a user by ID",
        "produces": [
          "application/json"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the user to update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "User object to update",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a user by ID",
        "produces": [
          "application/json"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the user to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "place": {
          "type": "string"
        }
      }
    }
  }
}`))
}
