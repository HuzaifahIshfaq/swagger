// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swagger/models"
)

// AddUserOKCode is the HTTP code returned for type AddUserOK
const AddUserOKCode int = 200

/*
AddUserOK user response

swagger:response addUserOK
*/
type AddUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewAddUserOK creates AddUserOK with default headers values
func NewAddUserOK() *AddUserOK {

	return &AddUserOK{}
}

// WithPayload adds the payload to the add user o k response
func (o *AddUserOK) WithPayload(payload *models.User) *AddUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user o k response
func (o *AddUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
AddUserDefault unexpected error

swagger:response addUserDefault
*/
type AddUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewAddUserDefault creates AddUserDefault with default headers values
func NewAddUserDefault(code int) *AddUserDefault {
	if code <= 0 {
		code = 500
	}

	return &AddUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add user default response
func (o *AddUserDefault) WithStatusCode(code int) *AddUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add user default response
func (o *AddUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add user default response
func (o *AddUserDefault) WithPayload(payload *models.ErrorModel) *AddUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user default response
func (o *AddUserDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
